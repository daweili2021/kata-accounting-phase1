#pragma once

#include <eosio/testing/tester.hpp>

namespace eosio { namespace testing {

struct contracts {
   static std::vector<uint8_t> token_wasm() { return read_wasm("${EOSIO_CONTRACTS_ROOT}/build/contracts/eosio.token/eosio.token.wasm"); }
   static std::vector<char>    token_abi() { return read_abi("${EOSIO_CONTRACTS_ROOT}/build/contracts/eosio.token/eosio.token.abi"); }

   static std::vector<uint8_t> accounting_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../accounting/accounting.wasm"); }
   static std::vector<char>    accounting_abi() { return read_abi("${CMAKE_BINARY_DIR}/../accounting/accounting.abi"); }
};

}}
